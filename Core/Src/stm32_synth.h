#include <stdint.h>
/*
 * DMA calls to move 32bits per clock
 * using uint16_t sends 2 at once
 * using uint8_t to send 4 at once
 * the DAC splits the sine wave vertically using either an 8bit or 12bit integer
 * the size of the sample can only be as accurate as the sample is split vertically
 *
 * 8bit is 256, so 64 32bit buffers
 * 12bit is 4096, so 2048 32bit buffers
 *
 * probably should at least have 10 points per period, otherwise a sine is just a triangle
 * sample rate of 2x the highest frequency to be played is good enough to
 * remove most distortion
 */

//#define SAMPLES_PER_PERIOD 32
//#define BUFFERS_PER_PERIOD 608
#define SIZE_OF_SAMPLE 256
//SIZE_OF_BUFFER = SIZE_OF_SAMPLE * freqmultiplier of slowest note;
#define SIZE_OF_BUFFER 1160
uint8_t playbackBuffersize = SIZE_OF_SAMPLE;
uint8_t buffer0[SIZE_OF_SAMPLE] = { 0 };
uint8_t buffer1[SIZE_OF_SAMPLE] = { 0 };
uint8_t* currentBuffer=buffer0;

// lookup tables
uint8_t sine[] = {
		   7,    7,    7,    7,    8,    8,    8,    9,
		   9,   10,   11,   11,   12,   13,   14,   15,
		  16,   17,   18,   19,   20,   22,   23,   25,
		  26,   28,   29,   31,   33,   35,   36,   38,
		  40,   42,   44,   46,   48,   51,   53,   55,
		  57,   60,   62,   64,   67,   69,   72,   74,
		  77,   79,   82,   84,   87,   90,   92,   95,
		  98,  100,  103,  106,  109,  111,  114,  117,
		 120,  122,  125,  128,  131,  133,  136,  139,
		 141,  144,  147,  149,  152,  155,  157,  160,
		 162,  165,  167,  170,  172,  175,  177,  179,
		 181,  184,  186,  188,  190,  192,  194,  196,
		 198,  200,  202,  204,  205,  207,  209,  210,
		 212,  213,  215,  216,  217,  218,  220,  221,
		 222,  223,  224,  224,  225,  226,  226,  227,
		 228,  228,  228,  229,  229,  229,  229,  229,
		 229,  229,  229,  229,  229,  228,  228,  228,
		 227,  226,  226,  225,  224,  224,  223,  222,
		 221,  220,  218,  217,  216,  215,  213,  212,
		 210,  209,  207,  205,  204,  202,  200,  198,
		 196,  194,  192,  190,  188,  186,  184,  181,
		 179,  177,  175,  172,  170,  167,  165,  162,
		 160,  157,  155,  152,  149,  147,  144,  141,
		 139,  136,  133,  131,  128,  125,  122,  120,
		 117,  114,  111,  109,  106,  103,  100,   98,
		  95,   92,   90,   87,   84,   82,   79,   77,
		  74,   72,   69,   67,   64,   62,   60,   57,
		  55,   53,   51,   48,   46,   44,   42,   40,
		  38,   36,   35,   33,   31,   29,   28,   26,
		  25,   23,   22,   20,   19,   18,   17,   16,
		  15,   14,   13,   12,   11,   11,   10,    9,
		   9,    8,    8,    8,    7,    7,    7,    7};
uint8_t triangle[] = {
		   7,    9,   11,   12,   14,   16,   18,   19,
		  21,   23,   25,   26,   28,   30,   32,   33,
		  35,   37,   39,   40,   42,   44,   46,   47,
		  49,   51,   53,   54,   56,   58,   60,   61,
		  63,   65,   67,   68,   70,   72,   74,   75,
		  77,   79,   81,   82,   84,   86,   88,   89,
		  91,   93,   95,   96,   98,  100,  102,  103,
		 105,  107,  109,  110,  112,  114,  116,  117,
		 119,  121,  123,  124,  126,  128,  130,  131,
		 133,  135,  137,  138,  140,  142,  144,  145,
		 147,  149,  151,  152,  154,  156,  158,  159,
		 161,  163,  165,  166,  168,  170,  172,  173,
		 175,  177,  179,  180,  182,  184,  186,  187,
		 189,  191,  193,  194,  196,  198,  200,  201,
		 203,  205,  206,  208,  210,  212,  213,  215,
		 217,  219,  220,  222,  224,  226,  227,  229,
		 229,  227,  226,  224,  222,  220,  219,  217,
		 215,  213,  212,  210,  208,  206,  205,  203,
		 201,  200,  198,  196,  194,  193,  191,  189,
		 187,  186,  184,  182,  180,  179,  177,  175,
		 173,  172,  170,  168,  166,  165,  163,  161,
		 159,  158,  156,  154,  152,  151,  149,  147,
		 145,  144,  142,  140,  138,  137,  135,  133,
		 131,  130,  128,  126,  124,  123,  121,  119,
		 117,  116,  114,  112,  110,  109,  107,  105,
		 103,  102,  100,   98,   96,   95,   93,   91,
		  89,   88,   86,   84,   82,   81,   79,   77,
		  75,   74,   72,   70,   68,   67,   65,   63,
		  61,   60,   58,   56,   54,   53,   51,   49,
		  47,   46,   44,   42,   40,   39,   37,   35,
		  33,   32,   30,   28,   26,   25,   23,   21,
		  19,   18,   16,   14,   12,   11,    9,    7};
uint8_t square[] = {
		 255,  255,  255,  255,  255,  255,  255,  255,
		 255,  255,  255,  255,  255,  255,  255,  255,
		 255,  255,  255,  255,  255,  255,  255,  255,
		 255,  255,  255,  255,  255,  255,  255,  255,
		 255,  255,  255,  255,  255,  255,  255,  255,
		 255,  255,  255,  255,  255,  255,  255,  255,
		 255,  255,  255,  255,  255,  255,  255,  255,
		 255,  255,  255,  255,  255,  255,  255,  255,
		 255,  255,  255,  255,  255,  255,  255,  255,
		 255,  255,  255,  255,  255,  255,  255,  255,
		 255,  255,  255,  255,  255,  255,  255,  255,
		 255,  255,  255,  255,  255,  255,  255,  255,
		 255,  255,  255,  255,  255,  255,  255,  255,
		 255,  255,  255,  255,  255,  255,  255,  255,
		 255,  255,  255,  255,  255,  255,  255,  255,
		 255,  255,  255,  255,  255,  255,  255,  255,
		   7,    7,    7,    7,    7,    7,    7,    7,
		   7,    7,    7,    7,    7,    7,    7,    7,
		   7,    7,    7,    7,    7,    7,    7,    7,
		   7,    7,    7,    7,    7,    7,    7,    7,
		   7,    7,    7,    7,    7,    7,    7,    7,
		   7,    7,    7,    7,    7,    7,    7,    7,
		   7,    7,    7,    7,    7,    7,    7,    7,
		   7,    7,    7,    7,    7,    7,    7,    7,
		   7,    7,    7,    7,    7,    7,    7,    7,
		   7,    7,    7,    7,    7,    7,    7,    7,
		   7,    7,    7,    7,    7,    7,    7,    7,
		   7,    7,    7,    7,    7,    7,    7,    7,
		   7,    7,    7,    7,    7,    7,    7,    7,
		   7,    7,    7,    7,    7,    7,    7,    7,
		   7,    7,    7,    7,    7,    7,    7,    7,
		   7,    7,    7,    7,    7,    7,    7,    7 };
uint8_t sawL[] = {
		 229,  228,  227,  227,  226,  225,  224,  223,
		 222,  221,  221,  220,  219,  218,  217,  216,
		 215,  214,  214,  213,  212,  211,  210,  209,
		 208,  207,  207,  206,  205,  204,  203,  202,
		 201,  200,  200,  199,  198,  197,  196,  195,
		 194,  194,  193,  192,  191,  190,  189,  188,
		 187,  187,  186,  185,  184,  183,  182,  181,
		 180,  180,  179,  178,  177,  176,  175,  174,
		 173,  173,  172,  171,  170,  169,  168,  167,
		 167,  166,  165,  164,  163,  162,  161,  160,
		 160,  159,  158,  157,  156,  155,  154,  153,
		 153,  152,  151,  150,  149,  148,  147,  146,
		 146,  145,  144,  143,  142,  141,  140,  140,
		 139,  138,  137,  136,  135,  134,  133,  133,
		 132,  131,  130,  129,  128,  127,  126,  126,
		 125,  124,  123,  122,  121,  120,  120,  119,
		 118,  117,  116,  115,  114,  113,  113,  112,
		 111,  110,  109,  108,  107,  106,  106,  105,
		 104,  103,  102,  101,  100,   99,   99,   98,
		  97,   96,   95,   94,   93,   93,   92,   91,
		  90,   89,   88,   87,   86,   86,   85,   84,
		  83,   82,   81,   80,   79,   79,   78,   77,
		  76,   75,   74,   73,   72,   72,   71,   70,
		  69,   68,   67,   66,   66,   65,   64,   63,
		  62,   61,   60,   59,   59,   58,   57,   56,
		  55,   54,   53,   52,   52,   51,   50,   49,
		  48,   47,   46,   45,   45,   44,   43,   42,
		  41,   40,   39,   39,   38,   37,   36,   35,
		  34,   33,   32,   32,   31,   30,   29,   28,
		  27,   26,   25,   25,   24,   23,   22,   21,
		  20,   19,   18,   18,   17,   16,   15,   14,
		  13,   12,   12,   11,   10,    9,    8,    7 };
uint8_t sawT[] = {
		   7,    8,    9,   10,   11,   12,   12,   13,
		  14,   15,   16,   17,   18,   18,   19,   20,
		  21,   22,   23,   24,   25,   25,   26,   27,
		  28,   29,   30,   31,   32,   32,   33,   34,
		  35,   36,   37,   38,   39,   39,   40,   41,
		  42,   43,   44,   45,   45,   46,   47,   48,
		  49,   50,   51,   52,   52,   53,   54,   55,
		  56,   57,   58,   59,   59,   60,   61,   62,
		  63,   64,   65,   66,   66,   67,   68,   69,
		  70,   71,   72,   72,   73,   74,   75,   76,
		  77,   78,   79,   79,   80,   81,   82,   83,
		  84,   85,   86,   86,   87,   88,   89,   90,
		  91,   92,   93,   93,   94,   95,   96,   97,
		  98,   99,   99,  100,  101,  102,  103,  104,
		 105,  106,  106,  107,  108,  109,  110,  111,
		 112,  113,  113,  114,  115,  116,  117,  118,
		 119,  120,  120,  121,  122,  123,  124,  125,
		 126,  126,  127,  128,  129,  130,  131,  132,
		 133,  133,  134,  135,  136,  137,  138,  139,
		 140,  140,  141,  142,  143,  144,  145,  146,
		 146,  147,  148,  149,  150,  151,  152,  153,
		 153,  154,  155,  156,  157,  158,  159,  160,
		 160,  161,  162,  163,  164,  165,  166,  167,
		 167,  168,  169,  170,  171,  172,  173,  173,
		 174,  175,  176,  177,  178,  179,  180,  180,
		 181,  182,  183,  184,  185,  186,  187,  187,
		 188,  189,  190,  191,  192,  193,  194,  194,
		 195,  196,  197,  198,  199,  200,  200,  201,
		 202,  203,  204,  205,  206,  207,  207,  208,
		 209,  210,  211,  212,  213,  214,  214,  215,
		 216,  217,  218,  219,  220,  221,  221,  222,
		 223,  224,  225,  226,  227,  227,  228,  229 };

typedef struct{
	int key;        // Input key number
	char *name;     // Note name (e.g., "C4")
	uint8_t arr; // how many times reference(10khz) is faster
}Note;

/*
    {0, "C4", 261.63},
    {1, "C#4", 277.18},
    {2, "D4", 293.66},
    {3, "D#4", 311.13},
    {4, "E4", 329.63},
    {5, "F4", 349.23},
    {6, "F#4", 369.99},
    {7, "G4", 392.00},
    {8, "G#4", 415.30},
    {9, "A4", 440.00},
    {10, "A#4", 466.16},
    {11, "B4", 493.88}
 */
Note noteMap[] = {
    {0, "C4", 119},
    {1, "C#4", 113},
    {2, "D4", 106},
    {3, "D#4", 100},
    {4, "E4", 95},
    {5, "F4", 89},
    {6, "F#4", 84},
    {7, "G4", 80},
    {8, "G#4", 75},
    {9, "A4", 71},
    {10, "A#4", 67},
    {11, "B4", 63}
 };

uint8_t *waveMap[] = {
		sine,
		triangle,
		square,
		sawL,
		sawT
};

void play(TIM_HandleTypeDef *htim, Note note) {
	HAL_TIM_Base_Start(htim);
	__HAL_TIM_SET_AUTORELOAD(htim, note.arr);
	HAL_TIM_GenerateEvent(htim, TIM_EVENTSOURCE_UPDATE);
}

void stop(TIM_HandleTypeDef *htim){
	HAL_TIM_Base_Stop(htim);
}
